require("plugins").setup()

vim.opt.tabstop = 2
vim.opt.shiftwidth = 2
vim.opt.softtabstop = 2
vim.opt.tw = 80
vim.opt.cc = '80'
vim.opt.clipboard:append('unnamedplus')

vim.cmd([[
map H ^
map L $
cab o find
imap <S-Insert> <C-R><C-O>*
cmap <S-Insert> <C-R><C-O>*
vmap <S-Insert> "-d"*P
map <S-Insert> "*P

let g:clang_format_path = "nvim/clang-format.exe"
au BufRead,BufNewFile,BufEnter *.c,*.h noremap <silent> <F1> :py3f nvim/clang-format.py<CR>
]])

vim.api.nvim_create_autocmd({"BufEnter", "WinEnter"}, {
  callback = function(ev)
    local fl = assert(loadfile('__filelist.lua'))  -- Generated by shell on startup.
    local project_files = fl()
    function notify(name, bufid, tick, firstchanged, lastchanged, lastline, bytecount, _, _)
      local fn = vim.api.nvim_buf_get_name(bufid)
      if project_files[fn] ~= nil then
        local contents = vim.api.nvim_buf_get_lines(bufid, 0, -1, false)
        vim.rpcnotify(0, "EventFileUpdate", bufid, fn, contents)
      end
      return false
    end
    vim.api.nvim_buf_attach(ev.buf, false, {
        on_lines=notify,
        on_changedtick=notify,
        on_reload=notify
      })
  end,
  once = false
})
